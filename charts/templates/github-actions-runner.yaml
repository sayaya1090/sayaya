apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Release.Namespace }}-github-actions-runner
  namespace: openshift-gitops
spec:
  destination:
    namespace: {{ .Release.Namespace }}
    server: 'https://kubernetes.default.svc'
  project: {{ .Release.Namespace }}
  sources:
    - path: charts/github-actions-runner
      repoURL: 'https://github.com/sayaya1090/sayaya.git'
      targetRevision: HEAD
      helm:
        values: |
          arc:
            nameOverride: "arc"
            fullnameOverride: "arc"
          ubi9:
            runnerScaleSetName: "ubi9"
            githubConfigUrl: https://github.com/sayaya1090/sayaya
            githubConfigSecret: github-secret
            minRunners: 3
            maxRunners: 8
            template:
              spec:
                serviceAccountName: builder
                initContainers:
                  - name: init-dind-externals
                    image: image-registry.openshift-image-registry.svc:5000/{{ .Release.Namespace }}/actions-runner:latest
                    command: [ "cp", "-r", "-v", "/home/runner/externals/.", "/home/runner/tmpDir/" ]
                    volumeMounts:
                      - name: dind-externals
                        mountPath: /home/runner/tmpDir
                containers:
                  - name: runner
                    image: image-registry.openshift-image-registry.svc:5000/{{ .Release.Namespace }}/actions-runner:latest
                    command: [ "/home/runner/run.sh" ]
                    securityContext:
                      runAsUser: 1000
                      privileged: true
                    resources:
                      requests:
                        cpu: "1"
                        memory: 500Mi
                    env:
                      - name: DOCKER_HOST
                        value: unix:///var/run/docker.sock
                    volumeMounts:
                      - name: cache
                        subPath: _work
                        mountPath: /home/runner/_work
                      - name: cache
                        subPath: .gradle
                        mountPath: /home/runner/.gradle
                      - name: cache
                        subPath: gradle-installations/installs
                        mountPath: /home/runner/gradle-installations/installs
                      - name: dind-sock
                        mountPath: /var/run
                      - name: cache
                        mountPath: /home/runner/cache
                  - name: dind
                    image: image-registry.openshift-image-registry.svc:5000/{{ .Release.Namespace }}/docker:dind
                    args: [ "dockerd", "--host=unix:///var/run/docker.sock", "--group=$(DOCKER_GROUP_GID)" ]
                    env:
                      - name: DOCKER_GROUP_GID
                        value: "123"
                    securityContext:
                      privileged: true
                    volumeMounts:
                      - name: cache
                        subPath: _work
                        mountPath: /home/runner/_work
                      - name: cache
                        subPath: fuse-overlayfs
                        mountPath: /var/lib/docker/fuse-overlayfs
                      - name: dind-sock
                        mountPath: /var/run
                      - name: dind-externals
                        mountPath: /home/runner/externals
                      - name: daemon-json
                        mountPath: /etc/docker/daemon.json
                        subPath: daemon.json
                        readOnly: true
                volumes:
                  - name: dind-sock
                    emptyDir: { }
                  - name: dind-externals
                    emptyDir: { }
                  - name: daemon-json
                    configMap:
                      name: docker-daemon-config
                  - name: cache
                    ephemeral:
                      volumeClaimTemplate:
                        spec:
                          accessModes:
                            - ReadWriteOnce
                          storageClassName: ocs-storagecluster-ceph-rbd
                          dataSource:
                            name: runner-cache-snapshot
                            kind: VolumeSnapshot
                            apiGroup: snapshot.storage.k8s.io
                          resources:
                            requests:
                              storage: 5Gi
            controllerServiceAccount:
              namespace: {{ .Release.Namespace }}
              name: arc
  revisionHistoryLimit: 0
  syncPolicy:
    syncOptions:
      - ServerSideApply=true